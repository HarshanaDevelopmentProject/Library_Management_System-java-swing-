package view;

import db.DbConnection;
import exception.EmptyFieldException;
import exception.NotFoundException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import util.IdCounter;

public class BookManagementDashboard extends javax.swing.JFrame {

    String userName;//user name for window
    String bookID;

    public BookManagementDashboard(String userName) {
        initComponents();
        this.userName = userName;
        book_userName.setText(userName); //set user name
        book_add_getGenre.setSelectedItem("");
        book_update_setGenre.setSelectedItem("");

        IdCounter counter = new IdCounter();
        bookID = counter.getId("I", "item_id", "item");
        book_add_setID.setText(bookID); //set book Id

        loadTable(); //to show all book details in table

        book_delete_btn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        book_add_getGenre = new javax.swing.JComboBox<>();
        book_add_setID = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        book_add_getTitle = new javax.swing.JTextField();
        book_add_getIsbn = new javax.swing.JTextField();
        book_add_getAuthor = new javax.swing.JTextField();
        book_add_getPublisher = new javax.swing.JTextField();
        book_add_getPublicationYear = new javax.swing.JTextField();
        book_add_getNumberOfPage = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        book_find_searchID = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        book_find_setTitle = new javax.swing.JLabel();
        book_find_setBookID = new javax.swing.JLabel();
        book_find_setAuthor = new javax.swing.JLabel();
        book_find_setPublicationYear = new javax.swing.JLabel();
        book_find_setGenre = new javax.swing.JLabel();
        book_find_setIsbn = new javax.swing.JLabel();
        book_find_setPublisher = new javax.swing.JLabel();
        book_find_setNumberOfPage = new javax.swing.JLabel();
        book_find_setAvailability = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        book_update_searchID = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        book_update_setBookID = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        book_update_setTitle = new javax.swing.JTextField();
        book_update_setAuthor = new javax.swing.JTextField();
        book_update_setPublicationYear = new javax.swing.JTextField();
        book_update_setIsbn = new javax.swing.JTextField();
        book_update_setPublisher = new javax.swing.JTextField();
        book_update_setNumberOfPage = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        book_update_setGenre = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        book_delete_searchID = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        book_delete_setIsbn = new javax.swing.JLabel();
        book_delete_setPulicationYear = new javax.swing.JLabel();
        book_delete_setAuthor = new javax.swing.JLabel();
        book_delete_setTitle = new javax.swing.JLabel();
        book_delete_setBookID = new javax.swing.JLabel();
        book_delete_btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        book_userName = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 204));
        jTabbedPane1.setForeground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jPanel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Book ID :");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Title");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Author");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Genre");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("ISBN");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Publisher");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Number Of Page");

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setText("Add Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        book_add_getGenre.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        book_add_getGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Fantasy", "Historical Fiction", "Mystery", "Romance", "Science Fiction (Sci-Fi)", "Thriller", "Horror", "Biography", "Self-Help", "History", "Science", "Travel", "Textbooks", "Reference Books" }));

        book_add_setID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_add_setID.setText("I-000");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("Publication Year");

        book_add_getTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_add_getIsbn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_add_getAuthor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_add_getPublisher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_add_getPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_add_getNumberOfPage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(book_add_setID)
                            .addComponent(book_add_getTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book_add_getNumberOfPage, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jButton2)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(book_add_setID))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_add_getTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(book_add_getAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(book_add_getPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(book_add_getGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(book_add_getIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(book_add_getPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(book_add_getNumberOfPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        jTabbedPane1.addTab("Add Book", jPanel1);

        book_find_searchID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_find_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setText("Search");
        jButton3.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Book Id :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Title :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Availability :");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Genre :");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Publisher :");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Number Of Page :");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setText("Author :");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setText("Publication Year :");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setText("ISBN :");

        book_find_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setBookID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setAuthor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setGenre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setIsbn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setPublisher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setNumberOfPage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_find_setAvailability.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(book_find_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel23)
                    .addComponent(jLabel12)
                    .addComponent(jLabel22)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(book_find_setBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(book_find_setTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setPublicationYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setGenre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setNumberOfPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book_find_setAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(428, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(book_find_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(book_find_setBookID))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(book_find_setTitle))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(book_find_setAuthor))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(book_find_setPublicationYear))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(book_find_setGenre))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(book_find_setIsbn))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(book_find_setPublisher))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(book_find_setNumberOfPage))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(book_find_setAvailability))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Find Book", jPanel2);

        jTable1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Title", "Author", "Publish Year", "Genre", "ISBN", "Publisher", "NO: Page", "Is Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("All Book", jPanel6);

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setText("Search");
        jButton4.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        book_update_searchID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_update_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel34.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel34.setText("Book Id :");

        book_update_setBookID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setText("Title :");

        jLabel38.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel38.setText("Author :");

        jLabel40.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel40.setText("Publication Year :");

        jLabel42.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel42.setText("Genre :");

        jLabel44.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel44.setText("ISBN :");

        jLabel46.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel46.setText("Publisher :");

        jLabel48.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel48.setText("Number Of Page :");

        book_update_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_update_setAuthor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_update_setPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_update_setIsbn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_update_setPublisher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_update_setNumberOfPage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButton5.setBackground(new java.awt.Color(255, 204, 255));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setText("Update Book");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        book_update_setGenre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_update_setGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Fantasy", "Historical Fiction", "Mystery", "Romance", "Science Fiction (Sci-Fi)", "Thriller", "Horror", "Biography", "Self-Help", "History", "Science", "Travel", "Textbooks", "Reference Books" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel48)
                            .addComponent(jLabel46)
                            .addComponent(jLabel44)
                            .addComponent(jLabel42)
                            .addComponent(jLabel40)
                            .addComponent(jLabel36)
                            .addComponent(jLabel34)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(book_update_setIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                            .addComponent(book_update_setPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                            .addComponent(book_update_setNumberOfPage, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(book_update_setBookID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(book_update_setTitle)
                                    .addComponent(book_update_setAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(book_update_setPublicationYear, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(book_update_setGenre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(book_update_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(book_update_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel33))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(book_update_setBookID))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(book_update_setTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(book_update_setAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(book_update_setPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(book_update_setGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(book_update_setIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(book_update_setPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(book_update_setNumberOfPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Update Book", jPanel3);

        jButton6.setBackground(new java.awt.Color(204, 255, 204));
        jButton6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton6.setText("Search");
        jButton6.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        book_delete_searchID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_delete_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel39.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel39.setText("Book Id :");

        jLabel41.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel41.setText("Title :");

        jLabel43.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel43.setText("Author :");

        jLabel45.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel45.setText("Publication Year :");

        jLabel49.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel49.setText("ISBN :");

        book_delete_setIsbn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_delete_setPulicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_delete_setAuthor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_delete_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_delete_setBookID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        book_delete_btn.setBackground(new java.awt.Color(255, 51, 51));
        book_delete_btn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        book_delete_btn.setText("Delete Book");
        book_delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_delete_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(495, Short.MAX_VALUE)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(book_delete_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel49)
                            .addComponent(jLabel45)
                            .addComponent(jLabel41)
                            .addComponent(jLabel39)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(book_delete_setBookID, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(book_delete_setTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(book_delete_setAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(book_delete_setPulicationYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(book_delete_setIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(book_delete_btn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(book_delete_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel37))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(book_delete_setBookID))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(book_delete_setTitle))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(book_delete_setAuthor))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(book_delete_setPulicationYear))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(book_delete_setIsbn))
                .addGap(36, 36, 36)
                .addComponent(book_delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 178, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Delete Book", jPanel4);

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel17.setText("Library Master");

        book_userName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        book_userName.setText("name");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Hello,");

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel1.setText("Book Management");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(book_userName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(160, 160, 160)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(book_userName)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //navigate to dashboard
    private void backDashboard(String userName) {
        setVisible(false);

        DashboardFrame dashboard = new DashboardFrame(userName);
        dashboard.setVisible(true);
    }
//back btn 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        backDashboard(userName);
    }//GEN-LAST:event_jButton1ActionPerformed
    //////////////////////////////////////////////////////////////////////////// Add book Section //////////////////////////////////////////////////////////   

    //Implement to check emptyfield
    private void emptyFieldChecker(String title, String author, String publishYear, String isbn, String publisher, String numberOfPage) throws EmptyFieldException {

        if (title.isEmpty() || author.isEmpty() || publishYear.isEmpty() || isbn.isEmpty() || publisher.isEmpty() || numberOfPage.isEmpty()) {
            throw new EmptyFieldException("Your Fields are empty!!!\n Plese fill Your details");
        }

    }
//add a book 

    private void addBook(String itemID, String title, String isAvailable, String author, String publishYear, String genre, String isbn, String publisher, String numberOfPage) {
        DbConnection db = new DbConnection();

        String itemSql = "INSERT INTO item(item_id,title,isAvailable,authorOrDirector,publicationYear) VALUES(?,?,?,?,?)";
        String bookSql = "INSERT INTO book(item_id,genre,isbn,publisher,numberOfPage) VALUES(?,?,?,?,?)";

        try {
            PreparedStatement statementItem = db.getDbConnection().prepareStatement(itemSql);
            PreparedStatement statementBook = db.getDbConnection().prepareStatement(bookSql);

            statementItem.setString(1, itemID);
            statementItem.setString(2, title);
            statementItem.setString(3, isAvailable);
            statementItem.setString(4, author);
            statementItem.setString(5, publishYear);

            statementBook.setString(1, itemID);
            statementBook.setString(2, genre);
            statementBook.setString(3, isbn);
            statementBook.setString(4, publisher);
            statementBook.setString(5, numberOfPage);

            int rowItem = statementItem.executeUpdate();
            int rowBook = statementBook.executeUpdate();
            if (rowItem > 0 && rowBook > 0) {
                JOptionPane.showMessageDialog(null, "Book add sucessfully!!!", "Add Book", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Add Book Error", JOptionPane.ERROR_MESSAGE);
        }

    }

//Implemetn book add btn operations
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String title = book_add_getTitle.getText();
        String author = book_add_getAuthor.getText();
        String publishYear = book_add_getPublicationYear.getText();
        String genre = (String) book_add_getGenre.getSelectedItem(); //convert to string
        String isbn = book_add_getIsbn.getText();
        String publisher = book_add_getPublisher.getText();
        String numberOfPage = book_add_getNumberOfPage.getText(); //convert to integer
        String isAvailable = "Yes";

        try {
            emptyFieldChecker(title, author, publishYear, isbn, publisher, numberOfPage);
            Book book = new Book(bookID, title, author, publishYear, isAvailable, genre, isbn, publisher, numberOfPage);
            addBook(book.getItem_id(), book.getTitle(), book.getIsAvailable(), book.getAuthorOrDirector(), book.getPublicationYear(), book.getGenre(), book.getIsbn(), book.getPublisher(), book.getNumberOfPage());

        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Add Book Empty Field Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
///////////////////////////////////////////////////////////////////////////////////////////////// find book ///////////////////////////////////////////////////////////////////////////////////////////////
//implement to search book from book id

    private void searchBook(String searchId) throws NotFoundException {
        String bookID;
        String title;
        String author;
        String publishYear;
        String genre;
        String isbn;
        String publisher;
        String numberOfPage;
        String availability;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,book WHERE item.item_id=book.item_id AND book.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();

            if (result.next()) {  // to find member
                bookID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("book.genre");
                isbn = result.getString("book.isbn");
                publisher = result.getString("book.publisher");
                numberOfPage = result.getString("book.numberOfPage");
                availability = result.getString("item.isAvailable");

                book_find_setBookID.setText(bookID);
                book_find_setTitle.setText(title);
                book_find_setAuthor.setText(author);
                book_find_setPublicationYear.setText(publishYear);
                book_find_setGenre.setText(genre);
                book_find_setIsbn.setText(isbn);
                book_find_setPublisher.setText(publisher);
                book_find_setNumberOfPage.setText(numberOfPage);
                book_find_setAvailability.setText(availability);

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Find Book Error", JOptionPane.ERROR_MESSAGE);
        }
    }
//implement find book btn
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String searchID = book_find_searchID.getText();

        try {
            searchBook(searchID);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Find Book error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //////////////////////////////////////////////////////////// Load Table Section  ////////////////////////////////////////////////////////////////////////////////////////////////////////
// implement load all data in table
    private void loadTable() {
        String bookID;
        String title;
        String author;
        String publishYear;
        String genre;
        String isbn;
        String publisher;
        String numberOfPage;
        String availability;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,book WHERE item.item_id=book.item_id;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            ResultSet result = statement.executeQuery();
            while (result.next()) {  // to llop all data
                bookID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("book.genre");
                isbn = result.getString("book.isbn");
                publisher = result.getString("book.publisher");
                numberOfPage = result.getString("book.numberOfPage");
                availability = result.getString("item.isAvailable");

                //show data in table
                String data[] = {bookID, title, author, publishYear, genre, isbn, publisher, numberOfPage, availability};
                DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
                table.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Load Table Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /////////////////////////////////////////////////////// Update Book Section ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //update book details display to user 
    private void updateBookShowData(String searchId) throws NotFoundException {
        String bookID;
        String title;
        String author;
        String publishYear;
        String genre;
        String isbn;
        String publisher;
        String numberOfPage;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,book WHERE item.item_id=book.item_id AND book.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();
            if (result.next()) {  // to find member
                bookID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("book.genre");
                isbn = result.getString("book.isbn");
                publisher = result.getString("book.publisher");
                numberOfPage = result.getString("book.numberOfPage");

                book_update_setBookID.setText(bookID);
                book_update_setTitle.setText(title);
                book_update_setAuthor.setText(author);
                book_update_setPublicationYear.setText(publishYear);
                book_update_setGenre.setSelectedItem(genre);
                book_update_setIsbn.setText(isbn);
                book_update_setPublisher.setText(publisher);
                book_update_setNumberOfPage.setText(numberOfPage);

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Update Book Data Display Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // implement search update book btn
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String searchId = book_update_searchID.getText();

        try {
            updateBookShowData(searchId);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Update Book error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton4ActionPerformed
    //update book details (Final Step)
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String bookID = book_update_setBookID.getText();
        String title = book_update_setTitle.getText();
        String author = book_update_setAuthor.getText();
        String publishYear = book_update_setPublicationYear.getText();
        String genre = (String) book_update_setGenre.getSelectedItem(); //convert to string
        String isbn = book_update_setIsbn.getText();
        String publisher = book_update_setPublisher.getText();
        String numberOfPage = book_update_setNumberOfPage.getText(); //convert to integer

        DbConnection db = new DbConnection();
        String sql = "UPDATE book ,item SET item.title=?,item.authorOrDirector=?,item.publicationYear=?,book.genre=?,book.isbn=?,book.publisher=?,book.numberOfPage=? WHERE item.item_id=book.item_id AND book.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, title);
            statement.setString(2, author);
            statement.setString(3, publishYear);
            statement.setString(4, genre);
            statement.setString(5, isbn);
            statement.setString(6, publisher);
            statement.setString(7, numberOfPage);
            statement.setString(8, bookID);

            int row = statement.executeUpdate();
            if (row > 0) {  // to find member
                JOptionPane.showMessageDialog(null, "Update Sucessfully!!", "Update Book", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Book Update Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    //////////////////////////////////////////////////////////////////////////////////////////// Book Delete Section //////////////////////////////////////////////////////////////////////////////////////////
    //delete book details show to user 
    private void deleteBookShowData(String searchId) throws NotFoundException {
        String bookID;
        String title;
        String author;
        String publishYear;
        String isbn;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,book WHERE item.item_id=book.item_id AND book.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();
            if (result.next()) {  // to find member
                bookID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                isbn = result.getString("book.isbn");

                book_delete_setBookID.setText(bookID);
                book_delete_setTitle.setText(title);
                book_delete_setAuthor.setText(author);
                book_delete_setPulicationYear.setText(publishYear);
                book_delete_setIsbn.setText(isbn);

                book_delete_btn.setVisible(true);

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Delete Book Data Display Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    //delete btn
    private void book_delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_delete_btnActionPerformed
        String bookID = book_delete_searchID.getText();

        DbConnection db = new DbConnection();
        String sqlItem = "DELETE FROM item WHERE item_id =?;";
        String sqlBook = "DELETE FROM book WHERE item_id =?;";
        try {
            PreparedStatement statementBook = db.getDbConnection().prepareStatement(sqlBook);
            PreparedStatement statementItem = db.getDbConnection().prepareStatement(sqlItem);

            statementBook.setString(1, bookID);
            statementItem.setString(1, bookID);

            int rowBook = statementBook.executeUpdate();
            int rowItem = statementItem.executeUpdate();

            if (rowItem > 0 && rowBook > 0) {  // 
                JOptionPane.showMessageDialog(null, "Delete Sucessfully!!", "Delete Book", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Book Delete Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_book_delete_btnActionPerformed
// search delete book id btn
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String searchId = book_delete_searchID.getText();

        try {
            deleteBookShowData(searchId);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Delete Book error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BookManagementDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BookManagementDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BookManagementDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BookManagementDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BookManagementDashboard().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField book_add_getAuthor;
    private javax.swing.JComboBox<String> book_add_getGenre;
    private javax.swing.JTextField book_add_getIsbn;
    private javax.swing.JTextField book_add_getNumberOfPage;
    private javax.swing.JTextField book_add_getPublicationYear;
    private javax.swing.JTextField book_add_getPublisher;
    private javax.swing.JTextField book_add_getTitle;
    private javax.swing.JLabel book_add_setID;
    private javax.swing.JButton book_delete_btn;
    private javax.swing.JTextField book_delete_searchID;
    private javax.swing.JLabel book_delete_setAuthor;
    private javax.swing.JLabel book_delete_setBookID;
    private javax.swing.JLabel book_delete_setIsbn;
    private javax.swing.JLabel book_delete_setPulicationYear;
    private javax.swing.JLabel book_delete_setTitle;
    private javax.swing.JTextField book_find_searchID;
    private javax.swing.JLabel book_find_setAuthor;
    private javax.swing.JLabel book_find_setAvailability;
    private javax.swing.JLabel book_find_setBookID;
    private javax.swing.JLabel book_find_setGenre;
    private javax.swing.JLabel book_find_setIsbn;
    private javax.swing.JLabel book_find_setNumberOfPage;
    private javax.swing.JLabel book_find_setPublicationYear;
    private javax.swing.JLabel book_find_setPublisher;
    private javax.swing.JLabel book_find_setTitle;
    private javax.swing.JTextField book_update_searchID;
    private javax.swing.JTextField book_update_setAuthor;
    private javax.swing.JLabel book_update_setBookID;
    private javax.swing.JComboBox<String> book_update_setGenre;
    private javax.swing.JTextField book_update_setIsbn;
    private javax.swing.JTextField book_update_setNumberOfPage;
    private javax.swing.JTextField book_update_setPublicationYear;
    private javax.swing.JTextField book_update_setPublisher;
    private javax.swing.JTextField book_update_setTitle;
    private javax.swing.JLabel book_userName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
