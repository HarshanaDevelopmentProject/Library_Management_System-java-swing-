package view;

import db.DbConnection;
import exception.EmptyFieldException;
import exception.NotFoundException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DVD;
import util.IdCounter;

public class DvdManagementForm extends javax.swing.JFrame {

    String userName; //user name for window

    String dvdID;

    public DvdManagementForm(String userName) {
        initComponents();
        this.userName = userName;
        dvd_userName.setText(userName); //set user name

        IdCounter counter = new IdCounter();
        dvdID = counter.getId("I", "item_id", "item");
        dvd_add_setDvdID.setText(dvdID); //set book Id

        loadTable(); //to show all dvd details in table

        dvd_delete_btn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CheckDVDSubtitle = new javax.swing.ButtonGroup();
        updatSubCheck = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        update = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        dvd_add_selectSubtitleAvailableYes = new javax.swing.JRadioButton();
        dvd_add_selectSubtitleAvailableNo = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        dvd_add_setDvdID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dvd_add_getTitle = new javax.swing.JTextField();
        dvd_add_getDirector = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dvd_add_getPublicationYear = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dvd_add_getGenre = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dvd_add_getDuration = new javax.swing.JTextField();
        dvd_add_getLanguage = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        dvd_find_searchID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        dvd_find_setDvdID = new javax.swing.JLabel();
        dvd_find_setTitle = new javax.swing.JLabel();
        dvd_find_setDirector = new javax.swing.JLabel();
        dvd_find_setPublishYear = new javax.swing.JLabel();
        dvd_find_setLanguage = new javax.swing.JLabel();
        dvd_find_setGenre = new javax.swing.JLabel();
        dvd_find_setDuration = new javax.swing.JLabel();
        dvd_find_setSubtitleAvailable = new javax.swing.JLabel();
        dvd_find_setAvailable = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        dvd_update_searchID = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        dvd_update_setDvdID = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        dvd_update_setTitle = new javax.swing.JTextField();
        dvd_update_setDirector = new javax.swing.JTextField();
        dvd_update_setPublicationYear = new javax.swing.JTextField();
        dvd_update_setGenre = new javax.swing.JComboBox<>();
        dvd_update_setDuration = new javax.swing.JTextField();
        dvd_update_setLanguage = new javax.swing.JComboBox<>();
        dvd_update_subAvailableYes = new javax.swing.JRadioButton();
        dvd_update_subAvailableNo = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        dvd_delete_searchID = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        dvd_delete_setDvdID = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        dvd_delete_setTitle = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        dvd_delete_setDirector = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        dvd_delete_setPublicationYear = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        dvd_delete_setLanguage = new javax.swing.JLabel();
        dvd_delete_btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        dvd_userName = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        update.setBackground(new java.awt.Color(255, 255, 204));
        update.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Subtitle Available :");

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("Add DVD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        CheckDVDSubtitle.add(dvd_add_selectSubtitleAvailableYes);
        dvd_add_selectSubtitleAvailableYes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dvd_add_selectSubtitleAvailableYes.setText("Yes");

        CheckDVDSubtitle.add(dvd_add_selectSubtitleAvailableNo);
        dvd_add_selectSubtitleAvailableNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dvd_add_selectSubtitleAvailableNo.setText("No");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("DVD ID :");

        dvd_add_setDvdID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_add_setDvdID.setText("I-000");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Title");

        dvd_add_getTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_add_getDirector.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Director");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("Publication Year");

        dvd_add_getPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText(" Genre :");

        dvd_add_getGenre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_add_getGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Fantasy", "Historical Fiction", "Mystery", "Romance", "Science Fiction (Sci-Fi)", "Thriller", "Horror", "Biography", "Self-Help", "History", "Science", "Travel", "Textbooks", "Reference Books" }));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Language :");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Duration :");

        dvd_add_getDuration.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_add_getLanguage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_add_getLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Spanish", "French", "German", "Italian", "Mandarin", "Japanese", "Portuguese", "Korean", "Hindi", "Russian", "Arabic", "Dutch", "Swedish", "Danish", "Turkish", "Cantonese", "Thai", "Polish", "Greek" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel20)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dvd_add_setDvdID)
                                    .addComponent(dvd_add_getTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dvd_add_getDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dvd_add_getDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dvd_add_getPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dvd_add_getGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dvd_add_getLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(dvd_add_selectSubtitleAvailableYes))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(dvd_add_selectSubtitleAvailableNo))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jButton2)))
                .addContainerGap(367, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dvd_add_setDvdID))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dvd_add_getTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dvd_add_getDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(dvd_add_getPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dvd_add_getLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dvd_add_getGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dvd_add_getDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(dvd_add_selectSubtitleAvailableYes)
                    .addComponent(dvd_add_selectSubtitleAvailableNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );

        update.addTab("Add DVD", jPanel2);

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setText("Search");
        jButton3.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        dvd_find_searchID.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dvd_find_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("DVD ID :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Title :");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setText("Director :");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setText("Publication Year :");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Language :");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setText("Genre :");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Duration :");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Subtitle Availability :");

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setText("Availability :");

        dvd_find_setDvdID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setDirector.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setPublishYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setLanguage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setGenre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setDuration.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setSubtitleAvailable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_find_setAvailable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(181, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel23)
                            .addComponent(jLabel12)
                            .addComponent(jLabel22)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dvd_find_setDvdID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setPublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setSubtitleAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_find_setAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dvd_find_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dvd_find_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dvd_find_setDvdID))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(dvd_find_setTitle))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(dvd_find_setDirector))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(dvd_find_setPublishYear))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(dvd_find_setLanguage))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(dvd_find_setGenre))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(dvd_find_setDuration))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(dvd_find_setSubtitleAvailable))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(dvd_find_setAvailable))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        update.addTab("Find DVD", jPanel3);

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DVD ID", "Title", "Director", "Publish Year", "Language", "Genre", "Duration", "Sub Availability", "Is Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );

        update.addTab("All DVD", jPanel7);

        dvd_update_searchID.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dvd_update_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setText("Search");
        jButton4.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel35.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel35.setText("DVD ID :");

        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setText("Title :");

        jLabel37.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel37.setText("Director :");

        jLabel39.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel39.setText("Publication Year :");

        jLabel40.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel40.setText("Language :");

        jLabel41.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel41.setText("Genre :");

        jLabel42.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel42.setText("Duration :");

        jLabel43.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel43.setText("Subtitle Availability :");

        jLabel46.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_update_setDvdID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setText("Update DVD");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        dvd_update_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_update_setDirector.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_update_setPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_update_setGenre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_update_setGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Fantasy", "Historical Fiction", "Mystery", "Romance", "Science Fiction (Sci-Fi)", "Thriller", "Horror", "Biography", "Self-Help", "History", "Science", "Travel", "Textbooks", "Reference Books" }));

        dvd_update_setDuration.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_update_setLanguage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_update_setLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Spanish", "French", "German", "Italian", "Mandarin", "Japanese", "Portuguese", "Korean", "Hindi", "Russian", "Arabic", "Dutch", "Swedish", "Danish", "Turkish", "Cantonese", "Thai", "Polish", "Greek" }));

        updatSubCheck.add(dvd_update_subAvailableYes);
        dvd_update_subAvailableYes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dvd_update_subAvailableYes.setText("Yes");

        updatSubCheck.add(dvd_update_subAvailableNo);
        dvd_update_subAvailableNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dvd_update_subAvailableNo.setText("No");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(181, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(jLabel39)
                            .addComponent(jLabel36)
                            .addComponent(jLabel35)
                            .addComponent(jLabel37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dvd_update_setDvdID, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(dvd_update_subAvailableYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dvd_update_subAvailableNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(dvd_update_setTitle)
                            .addComponent(dvd_update_setDirector)
                            .addComponent(dvd_update_setPublicationYear)
                            .addComponent(dvd_update_setGenre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dvd_update_setDuration)
                            .addComponent(dvd_update_setLanguage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dvd_update_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dvd_update_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel34))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(dvd_update_setDvdID))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(dvd_update_setTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(dvd_update_setDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(dvd_update_setPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(dvd_update_setLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(dvd_update_setGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(dvd_update_setDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel46)
                    .addComponent(dvd_update_subAvailableYes)
                    .addComponent(dvd_update_subAvailableNo))
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        update.addTab("Update DVD", jPanel4);

        jButton6.setBackground(new java.awt.Color(204, 255, 204));
        jButton6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton6.setText("Search");
        jButton6.setPreferredSize(new java.awt.Dimension(79, 30));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        dvd_delete_searchID.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dvd_delete_searchID.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_icon.png"))); // NOI18N

        jLabel44.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel44.setText("DVD ID :");

        dvd_delete_setDvdID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel47.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel47.setText("Title :");

        dvd_delete_setTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel49.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel49.setText("Director :");

        dvd_delete_setDirector.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel51.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel51.setText("Publication Year :");

        dvd_delete_setPublicationYear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel54.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel54.setText("Language :");

        dvd_delete_setLanguage.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        dvd_delete_btn.setBackground(new java.awt.Color(255, 51, 51));
        dvd_delete_btn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dvd_delete_btn.setText("Delete Book");
        dvd_delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dvd_delete_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(269, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel44)
                            .addComponent(jLabel49)
                            .addComponent(jLabel51)
                            .addComponent(jLabel54))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dvd_delete_setDvdID)
                            .addComponent(dvd_delete_setTitle)
                            .addComponent(dvd_delete_setDirector)
                            .addComponent(dvd_delete_setPublicationYear)
                            .addComponent(dvd_delete_setLanguage))
                        .addGap(162, 162, 162))
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dvd_delete_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(dvd_delete_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dvd_delete_searchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel38))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(dvd_delete_setDvdID))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(dvd_delete_setTitle))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(dvd_delete_setDirector))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(dvd_delete_setPublicationYear))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(dvd_delete_setLanguage))
                .addGap(37, 37, 37)
                .addComponent(dvd_delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        update.addTab("Delete DVD", jPanel5);

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel17.setText("Library Master");

        dvd_userName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dvd_userName.setText("name");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("Hello,");

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel1.setText("DVD Management");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dvd_userName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(160, 160, 160)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dvd_userName))))
                .addGap(67, 67, 67))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //navigate to dashboard
    private void backDashboard(String userName) {
        setVisible(false);

        DashboardFrame dashboard = new DashboardFrame(userName);
        dashboard.setVisible(true);
    }

    //back btn
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        backDashboard(userName);
    }//GEN-LAST:event_jButton1ActionPerformed

    //////////////////////////////////////////////////////////////////////// Add Dvd //////////////////////////////////////////////////////////////////////
    //Implement to check emptyfield
    private void emptyFieldChecker(String title, String author, String publishYear, String duration) throws EmptyFieldException {

        if (title.isEmpty() || author.isEmpty() || publishYear.isEmpty() || duration.isEmpty()) {
            throw new EmptyFieldException("Your Fields are empty!!!\n Plese fill Your details");
        }

    }
//add a DVD

    private void addDVD(String itemID, String title, String isAvailable, String author, String publishYear, String language, String genre, String duration, String isSubtitleAvailable) {
        DbConnection db = new DbConnection();

        String itemSql = "INSERT INTO item(item_id,title,isAvailable,authorOrDirector,publicationYear) VALUES(?,?,?,?,?)";
        String dvdSql = "INSERT INTO dvd(item_id,language,genre,duration,isSubtitleAvailable) VALUES(?,?,?,?,?)";

        try {
            PreparedStatement statementItem = db.getDbConnection().prepareStatement(itemSql);
            PreparedStatement statementDvd = db.getDbConnection().prepareStatement(dvdSql);

            statementItem.setString(1, itemID);
            statementItem.setString(2, title);
            statementItem.setString(3, isAvailable);
            statementItem.setString(4, author);
            statementItem.setString(5, publishYear);

            statementDvd.setString(1, itemID);
            statementDvd.setString(2, language);
            statementDvd.setString(3, genre);
            statementDvd.setString(4, duration);
            statementDvd.setString(5, isSubtitleAvailable);

            int rowItem = statementItem.executeUpdate();
            int rowDvd = statementDvd.executeUpdate();
            if (rowItem > 0 && rowDvd > 0) {
                JOptionPane.showMessageDialog(null, "DVD add sucessfully!!!", "Add DVD", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Add DVD Error", JOptionPane.ERROR_MESSAGE);
        }

    }

// implement add dvd btn operations
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String title = dvd_add_getTitle.getText();
        String director = dvd_add_getDirector.getText();
        String publishYear = dvd_add_getPublicationYear.getText();
        String language = (String) dvd_add_getLanguage.getSelectedItem();
        String genre = (String) dvd_add_getGenre.getSelectedItem(); //convert to string
        String duration = dvd_add_getDuration.getText();
        String isAvailable = "Yes";
        String subtitleAvailable = "";
        if (dvd_add_selectSubtitleAvailableYes.isSelected()) {
            subtitleAvailable = "Yes"; // check subtitle chek radio btn
        } else if (dvd_add_selectSubtitleAvailableNo.isSelected()) {
            subtitleAvailable = "No"; // check subtitle chek radio btn
        }

        try {
            emptyFieldChecker(title, director, publishYear, duration);
            DVD dvd = new DVD(dvdID, title, director, publishYear, isAvailable, language, genre, duration, subtitleAvailable);
            addDVD(dvd.getItem_id(), dvd.getTitle(), dvd.getIsAvailable(), dvd.getAuthorOrDirector(), dvd.getPublicationYear(), dvd.getLanguage(), dvd.getGenre(), dvd.getDuration(), dvd.getIsSubtitleAvailable());

        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Add DVD Empty Field Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    ///////////////////////////////////////////////////////////////////////////////////////////////// find dvd ///////////////////////////////////////////////////////////////////////////////////////////////
//implement to search dvd from dvd id
    private void searchDVD(String searchId) throws NotFoundException {
        String dvdID;
        String title;
        String author;
        String publishYear;
        String language;
        String genre;
        String duration;
        String subtitleAvailability;
        String availability;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,dvd WHERE item.item_id=dvd.item_id AND dvd.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();

            if (result.next()) {  // to find member
                dvdID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("dvd.genre");
                language = result.getString("dvd.language");
                duration = result.getString("dvd.duration");
                subtitleAvailability = result.getString("dvd.isSubtitleAvailable");
                availability = result.getString("item.isAvailable");

                dvd_find_setDvdID.setText(dvdID);
                dvd_find_setTitle.setText(title);
                dvd_find_setDirector.setText(author);
                dvd_find_setPublishYear.setText(publishYear);
                dvd_find_setGenre.setText(genre);
                dvd_find_setLanguage.setText(language);
                dvd_find_setDuration.setText(duration);
                dvd_find_setSubtitleAvailable.setText(subtitleAvailability);
                dvd_find_setAvailable.setText(availability);

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Find DVD Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    //implement find dvd btn
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String searchID = dvd_find_searchID.getText();

        try {
            searchDVD(searchID);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Find DVD error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //////////////////////////////////////////////////////////// Load Table Section  ////////////////////////////////////////////////////////////////////////////////////////////////////////
// implement load all data in table
    private void loadTable() {
        String dvdID;
        String title;
        String author;
        String publishYear;
        String language;
        String genre;
        String duration;
        String subtitleAvailability;
        String availability;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,dvd WHERE item.item_id=dvd.item_id;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            ResultSet result = statement.executeQuery();
            while (result.next()) {  // to llop all data
                dvdID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("dvd.genre");
                language = result.getString("dvd.language");
                duration = result.getString("dvd.duration");
                subtitleAvailability = result.getString("dvd.isSubtitleAvailable");
                availability = result.getString("item.isAvailable");

                //show data in table
                String data[] = {dvdID, title, author, publishYear, language, genre, duration, subtitleAvailability, availability};
                DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
                table.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Load Table Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /////////////////////////////////////////////////////// Update DVD Section ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //update dvd details display to user 
    private void updateDVDShowData(String searchId) throws NotFoundException {
        String dvdID;
        String title;
        String author;
        String publishYear;
        String genre;
        String language;
        String duration;
        String subtitleAvailability;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,dvd WHERE item.item_id=dvd.item_id AND dvd.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();
            if (result.next()) {  // to find member
                dvdID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                genre = result.getString("dvd.genre");
                language = result.getString("dvd.language");
                duration = result.getString("dvd.duration");
                subtitleAvailability = result.getString("dvd.isSubtitleAvailable");

                dvd_update_setDvdID.setText(dvdID);
                dvd_update_setTitle.setText(title);
                dvd_update_setDirector.setText(author);
                dvd_update_setPublicationYear.setText(publishYear);
                dvd_update_setGenre.setSelectedItem(genre);
                dvd_update_setLanguage.setSelectedItem(language);
                dvd_update_setDuration.setText(duration);

                if (subtitleAvailability.equals("Yes")) {
                    dvd_update_subAvailableYes.setSelected(true);
                } else if (subtitleAvailability.equals("No")) {
                    dvd_update_subAvailableNo.setSelected(true);
                }

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Update DVD Data Display Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // implement search update dvd btn
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String searchId = dvd_update_searchID.getText();

        try {
            updateDVDShowData(searchId);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Update DVD error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    //update dvd details (Final Step)
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String dvdID = dvd_update_setDvdID.getText();
        String title = dvd_update_setTitle.getText();
        String author = dvd_update_setDirector.getText();
        String publishYear = dvd_update_setPublicationYear.getText();
        String genre = (String) dvd_update_setGenre.getSelectedItem(); //convert to string
        String language = (String) dvd_update_setLanguage.getSelectedItem();
        String duration = dvd_update_setDuration.getText();

        String subtitleAvailable = "";
        if (dvd_update_subAvailableYes.isSelected()) {
            subtitleAvailable = "Yes"; // check subtitle chek radio btn
        } else if (dvd_update_subAvailableNo.isSelected()) {
            subtitleAvailable = "No"; // check subtitle chek radio btn
        }

        DbConnection db = new DbConnection();
        String sql = "UPDATE dvd,item SET item.title=?,item.authorOrDirector=?,item.publicationYear=?,dvd.language=?,dvd.genre=?,dvd.duration=?,dvd.isSubtitleAvailable=? WHERE item.item_id=dvd.item_id AND dvd.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, title);
            statement.setString(2, author);
            statement.setString(3, publishYear);
            statement.setString(4, language);
            statement.setString(5, genre);
            statement.setString(6, duration);
            statement.setString(7, subtitleAvailable);

            statement.setString(8, dvdID);

            int row = statement.executeUpdate();
            if (row > 0) {  // to update dvd
                JOptionPane.showMessageDialog(null, "Update Sucessfully!!", "Update DVD", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "DVD Update Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    //////////////////////////////////////////////////////////////////////////////////////////// DVD Delete Section //////////////////////////////////////////////////////////////////////////////////////////
    //delete DVD details show to user 

    private void deleteDVDShowData(String searchId) throws NotFoundException {
        String dvdkID;
        String title;
        String author;
        String publishYear;
        String language;

        DbConnection db = new DbConnection();
        String sql = "SELECT * FROM item,dvd WHERE item.item_id=dvd.item_id AND dvd.item_id=?;";
        try {
            PreparedStatement statement = db.getDbConnection().prepareStatement(sql);
            statement.setString(1, searchId);
            ResultSet result = statement.executeQuery();
            if (result.next()) {  // to find member
                dvdID = result.getString("item.item_id");
                title = result.getString("item.title");
                author = result.getString("item.authorOrDirector");
                publishYear = result.getString("item.publicationYear");
                language = result.getString("dvd.language");

                dvd_delete_setDvdID.setText(dvdID);
                dvd_delete_setTitle.setText(title);
                dvd_delete_setDirector.setText(author);
                dvd_delete_setPublicationYear.setText(publishYear);
                dvd_delete_setLanguage.setText(language);

                dvd_delete_btn.setVisible(true);

            } else {
                throw new NotFoundException(searchId + " not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Delete DVD Data Display Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    //delete btn
    private void dvd_delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dvd_delete_btnActionPerformed
        String dvdID = dvd_delete_searchID.getText();

        DbConnection db = new DbConnection();
        String sqlItem = "DELETE FROM item WHERE item_id =?;";
        String sqlDvd = "DELETE FROM dvd WHERE item_id =?;";
        try {
            PreparedStatement statementDvd = db.getDbConnection().prepareStatement(sqlDvd);
            PreparedStatement statementItem = db.getDbConnection().prepareStatement(sqlItem);

            statementDvd.setString(1, dvdID);
            statementItem.setString(1, dvdID);

            int rowDvd = statementDvd.executeUpdate();
            int rowItem = statementItem.executeUpdate();
            if (rowDvd > 0 && rowItem > 0) {  // to find dvd
                JOptionPane.showMessageDialog(null, "Delete Sucessfully!!", "Delete DVD", JOptionPane.INFORMATION_MESSAGE);
                backDashboard(userName);

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "DVD Delete Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_dvd_delete_btnActionPerformed
//delete dvd search btn
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String searchId = dvd_delete_searchID.getText();

        try {
            deleteDVDShowData(searchId);
        } catch (NotFoundException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Delete DVD error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DvdManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DvdManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DvdManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DvdManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DvdManagementForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup CheckDVDSubtitle;
    private javax.swing.JTextField dvd_add_getDirector;
    private javax.swing.JTextField dvd_add_getDuration;
    private javax.swing.JComboBox<String> dvd_add_getGenre;
    private javax.swing.JComboBox<String> dvd_add_getLanguage;
    private javax.swing.JTextField dvd_add_getPublicationYear;
    private javax.swing.JTextField dvd_add_getTitle;
    private javax.swing.JRadioButton dvd_add_selectSubtitleAvailableNo;
    private javax.swing.JRadioButton dvd_add_selectSubtitleAvailableYes;
    private javax.swing.JLabel dvd_add_setDvdID;
    private javax.swing.JButton dvd_delete_btn;
    private javax.swing.JTextField dvd_delete_searchID;
    private javax.swing.JLabel dvd_delete_setDirector;
    private javax.swing.JLabel dvd_delete_setDvdID;
    private javax.swing.JLabel dvd_delete_setLanguage;
    private javax.swing.JLabel dvd_delete_setPublicationYear;
    private javax.swing.JLabel dvd_delete_setTitle;
    private javax.swing.JTextField dvd_find_searchID;
    private javax.swing.JLabel dvd_find_setAvailable;
    private javax.swing.JLabel dvd_find_setDirector;
    private javax.swing.JLabel dvd_find_setDuration;
    private javax.swing.JLabel dvd_find_setDvdID;
    private javax.swing.JLabel dvd_find_setGenre;
    private javax.swing.JLabel dvd_find_setLanguage;
    private javax.swing.JLabel dvd_find_setPublishYear;
    private javax.swing.JLabel dvd_find_setSubtitleAvailable;
    private javax.swing.JLabel dvd_find_setTitle;
    private javax.swing.JTextField dvd_update_searchID;
    private javax.swing.JTextField dvd_update_setDirector;
    private javax.swing.JTextField dvd_update_setDuration;
    private javax.swing.JLabel dvd_update_setDvdID;
    private javax.swing.JComboBox<String> dvd_update_setGenre;
    private javax.swing.JComboBox<String> dvd_update_setLanguage;
    private javax.swing.JTextField dvd_update_setPublicationYear;
    private javax.swing.JTextField dvd_update_setTitle;
    private javax.swing.JRadioButton dvd_update_subAvailableNo;
    private javax.swing.JRadioButton dvd_update_subAvailableYes;
    private javax.swing.JLabel dvd_userName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.ButtonGroup updatSubCheck;
    private javax.swing.JTabbedPane update;
    // End of variables declaration//GEN-END:variables
}
